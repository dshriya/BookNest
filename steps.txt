Perfect üëç Let‚Äôs get your environment ready before coding. Here‚Äôs exactly what you need:

---

## **1. Code Editor**

üëâ Recommended: **Visual Studio Code (VS Code)**

* Download: [https://code.visualstudio.com/](https://code.visualstudio.com/)
* Extensions you should install:

  * **ES7+ React/Redux/React-Native snippets** (fast React snippets)
  * **Prettier - Code formatter**
  * **REST Client** (to test APIs without Postman)
  * **Tailwind CSS IntelliSense** (if you use Tailwind)
  * **MongoDB for VS Code** (if using MongoDB)

---

## **2. Installations**

### **A. Node.js & npm**

* Download: [https://nodejs.org/](https://nodejs.org/)
* Install **LTS version** (stable).
* Verify after install:

  ```bash
  node -v
  npm -v
  ```

### **B. Git (Version Control)**

* Download: [https://git-scm.com/](https://git-scm.com/)
* Verify:

  ```bash
  git --version
  ```

### **C. Database**

* **Option 1: MongoDB Atlas (Cloud, Free, Recommended)**

  * Sign up: [https://www.mongodb.com/atlas](https://www.mongodb.com/atlas)
  * Create a free cluster ‚Üí get connection string
* **Option 2: Local MongoDB**

  * Download Community Edition: [https://www.mongodb.com/try/download/community](https://www.mongodb.com/try/download/community)

(If you prefer SQL, you can use PostgreSQL with pgAdmin, but MongoDB is simpler for this project.)

### **D. Package Managers (Optional but Recommended)**

* **Yarn** (alternative to npm, faster)

  ```bash
  npm install --global yarn
  ```
* **npx** (comes with Node, used to run commands without global installs)

### **E. Deployment Tools (Later Stage)**

* **Vercel / Netlify CLI** (for frontend deployment)
* **Render / Railway CLI** (for backend deployment)

---

## **3. Project Setup Commands**

### **Backend Setup**

```bash
mkdir book-library-backend
cd book-library-backend
npm init -y
npm install express mongoose bcryptjs jsonwebtoken cors dotenv
npm install --save-dev nodemon
```

### **Frontend Setup**

Using Vite (faster than CRA):

```bash
npm create vite@latest book-library-frontend
cd book-library-frontend
npm install
npm install axios react-router-dom jwt-decode
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
```

---

‚úÖ After this, you‚Äôll have:

* VS Code set up
* Node + npm ready
* Git for version control
* MongoDB for database
* Backend and frontend projects initialized

---

Do you want me to **give you the starter folder structures + initial code (server.js + React App)** so that after installation you can just run and see something working?
